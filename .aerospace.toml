# Place a copy of this config to ~/.aerospace.toml
# After that, you can edit ~/.aerospace.toml to your liking

# You can use it to add commands that run after login to macOS user session.
# 'start-at-login' needs to be 'true' for 'after-login-command' to work
# Available commands: https://nikitabobko.github.io/AeroSpace/commands
after-login-command = []

# You can use it to add commands that run after AeroSpace startup.
# 'after-startup-command' is run after 'after-login-command'
# Available commands : https://nikitabobko.github.io/AeroSpace/commands
after-startup-command = [
  'exec-and-forget borders active_color=0xffFFD700 inactive_color=0xffFFFACD width=6.0'
]
# Start AeroSpace at login
start-at-login = false

# Normalizations. See: https://nikitabobko.github.io/AeroSpace/guide#normalization
enable-normalization-flatten-containers = true
enable-normalization-opposite-orientation-for-nested-containers = true

# See: https://nikitabobko.github.io/AeroSpace/guide#layouts
# The 'accordion-padding' specifies the size of accordion padding
# You can set 0 to disable the padding feature
accordion-padding = 30

# Possible values: tiles|accordion
default-root-container-layout = 'tiles'

# Possible values: horizontal|vertical|auto
# 'auto' means: wide monitor (anything wider than high) gets horizontal orientation,
#               tall monitor (anything higher than wide) gets vertical orientation
default-root-container-orientation = 'horizontal'

# Mouse follows focus when focused monitor changes
# Drop it from your config, if you don't like this behavior
# See https://nikitabobko.github.io/AeroSpace/guide#on-focus-changed-callbacks
# See https://nikitabobko.github.io/AeroSpace/commands#move-mouse
# Fallback value (if you omit the key): on-focused-monitor-changed = []
on-focused-monitor-changed = ['move-mouse monitor-lazy-center']

# You can effectively turn off macOS "Hide application" (cmd-h) feature by toggling this flag
# Useful if you don't use this macOS feature, but accidentally hit cmd-h or cmd-alt-h key
# Also see: https://nikitabobko.github.io/AeroSpace/goodies#disable-hide-app
automatically-unhide-macos-hidden-apps = false

# Possible values: (qwerty|dvorak)
# See https://nikitabobko.github.io/AeroSpace/guide#key-mapping
[key-mapping]
    preset = 'qwerty'

# Gaps between windows (inner-*) and between monitor edges (outer-*).
# Possible values:
# - Constant:     gaps.outer.top = 8
# - Per monitor:  gaps.outer.top = [{ monitor.main = 16 }, { monitor."some-pattern" = 32 }, 24]
#                 In this example, 24 is a default value when there is no match.
#                 Monitor pattern is the same as for 'workspace-to-monitor-force-assignment'.
#                 See:
#                 https://nikitabobko.github.io/AeroSpace/guide#assign-workspaces-to-monitors
[gaps]
    inner.horizontal = 10
    inner.vertical =   10
    outer.left =       10
    outer.bottom =     10
    outer.top =        10
    outer.right =      10

# 'main' binding mode declaration
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
# 'main' binding mode must be always presented
# Fallback value (if you omit the key): mode.main.binding = {}
[mode.main.binding]

    # All possible keys:
    # - Letters.        a, b, c, ..., z
    # - Numbers.        0, 1, 2, ..., 9
    # - Keypad numbers. keypad0, keypad1, keypad2, ..., keypad9
    # - F-keys.         f1, f2, ..., f20
    # - Special keys.   minus, equal, period, comma, slash, backslash, quote, semicolon,
    #                   backtick, leftSquareBracket, rightSquareBracket, space, enter, esc,
    #                   backspace, tab
    # - Keypad special. keypadClear, keypadDecimalMark, keypadDivide, keypadEnter, keypadEqual,
    #                   keypadMinus, keypadMultiply, keypadPlus
    # - Arrows.         left, down, up, right

    # All possible modifiers: cmd, alt, ctrl, shift

    # All possible commands: https://nikitabobko.github.io/AeroSpace/commands

    # See: https://nikitabobko.github.io/AeroSpace/commands#exec-and-forget
    # You can uncomment the following lines to open up terminal with alt + enter shortcut
    # (like in i3)
    alt-enter = '''exec-and-forget osascript -e '
    tell application "System Events"
        set isRunning to (count of (application processes whose name is "Ghostty")) > 0
    end tell

    if isRunning then
        -- Bring Ghostty to the front
        tell application "Ghostty"
            activate
            -- Attempt to open a new window using a menu item
            tell application "System Events"
                tell process "Ghostty"
                    click menu item "New Window" of menu "File" of menu bar 1
                end tell
            end tell
        end tell
    else
        -- Launch Ghostty
        tell application "Ghostty" to activate
    end if'
    '''

    # See: https://nikitabobko.github.io/AeroSpace/commands#layout
    alt-slash = 'layout tiles horizontal vertical'
    alt-comma = 'layout accordion horizontal vertical'

    # See: https://nikitabobko.github.io/AeroSpace/commands#focus
    alt-semicolon =         'focus --boundaries-action wrap-around-the-workspace left'
    alt-quote =             'focus --boundaries-action wrap-around-the-workspace down'
    alt-leftSquareBracket = 'focus --boundaries-action wrap-around-the-workspace up'
    alt-backslash =         'focus --boundaries-action wrap-around-the-workspace right'
    # alt-h = 'focus left'
    # alt-j = 'focus down'
    # alt-k = 'focus up'
    # alt-l = 'focus right'

    # See: https://nikitabobko.github.io/AeroSpace/commands#move
    alt-shift-semicolon = 'move left'
    alt-shift-quote = 'move down'
    alt-shift-leftSquareBracket = 'move up'
    alt-shift-backslash = 'move right'

    # Consider using 'join-with' command as a 'split' replacement if you want to enable
    # normalizations
    # alt-h = 'split horizontal'
    # alt-v = 'split vertical'
    alt-shift-f = 'macos-native-fullscreen'
    alt-h = 'macos-native-minimize'
    alt-f = 'fullscreen'
    alt-shift-space = 'layout floating tiling'
    # Move to center
    alt-c = '''exec-and-forget osascript -e '
    tell application "System Events"
        set frontApp to first application process whose frontmost is true
        tell frontApp
            if (count of windows) > 0 then
                set frontmostWindow to window 1
                set {winWidth, winHeight} to size of frontmostWindow

                tell application "Finder"
                    set screenBounds to bounds of window of desktop
                    set {screenX, screenY, screenWidth, screenHeight} to screenBounds
                end tell

                set newX to screenX + (screenWidth - winWidth) / 2
                set newY to screenY + (screenHeight - winHeight) / 2
                set position of frontmostWindow to {newX, newY}
            end if
        end tell
    end tell' '''

    # See: https://nikitabobko.github.io/AeroSpace/commands#resize
    alt-minus = 'resize smart -100'
    alt-equal = 'resize smart +100'

    # See: https://nikitabobko.github.io/AeroSpace/commands#workspace
    alt-1 = 'workspace 1'
    alt-2 = 'workspace 2'
    alt-3 = 'workspace 3'
    alt-4 = 'workspace 4'
    alt-5 = 'workspace 5'
    alt-6 = 'workspace 6'
    alt-7 = 'workspace 7'
    alt-8 = 'workspace 8'
    alt-9 = 'workspace 9'

    # See: https://nikitabobko.github.io/AeroSpace/commands#move-node-to-workspace
    alt-shift-1 = 'move-node-to-workspace 1'
    alt-shift-2 = 'move-node-to-workspace 2'
    alt-shift-3 = 'move-node-to-workspace 3'
    alt-shift-4 = 'move-node-to-workspace 4'
    alt-shift-5 = 'move-node-to-workspace 5'
    alt-shift-6 = 'move-node-to-workspace 6'
    alt-shift-7 = 'move-node-to-workspace 7'
    alt-shift-8 = 'move-node-to-workspace 8'
    alt-shift-9 = 'move-node-to-workspace 9'

    # See: https://nikitabobko.github.io/AeroSpace/commands#workspace-back-and-forth
    alt-tab = 'workspace-back-and-forth'
    # See: https://nikitabobko.github.io/AeroSpace/commands#move-workspace-to-monitor
    alt-shift-tab = 'move-workspace-to-monitor --wrap-around next'

    # See: https://nikitabobko.github.io/AeroSpace/commands#mode
    alt-s = 'mode service'
    alt-r = 'mode resize'

[workspace-to-monitor-force-assignment]
    1 = ['49M2C8900L', 2]
    2 = ['49M2C8900L', 2]
    3 = ['49M2C8900L', 2]
    4 = ['49M2C8900L', 1]
    5 = ['Built-in Retina Display', 1]
    6 = ['Built-in Retina Display', 1]
    7 = [3, 'Built-in Retina Display']
    8 = [3, 'Built-in Retina Display']
    9 = [3, 'Built-in Retina Display']

[mode.resize.binding]
    # Move left
    alt-semicolon = '''exec-and-forget osascript -e '
    tell application "System Events"
        tell (first process whose frontmost is true)
            set frontmostWindow to window 1
            set {x, y} to position of frontmostWindow
            set position of frontmostWindow to {x - 100, y}
        end tell
    end tell'
    '''
    # Move down
    alt-quote = '''exec-and-forget osascript -e '
    tell application "System Events"
        tell (first process whose frontmost is true)
            set frontmostWindow to window 1
            set {x, y} to position of frontmostWindow
            set position of frontmostWindow to {x, y + 100}
        end tell
    end tell'
    '''
    # Move up
    alt-leftSquareBracket = '''exec-and-forget osascript -e '
    tell application "System Events"
        tell (first process whose frontmost is true)
            set frontmostWindow to window 1
            set {x, y} to position of frontmostWindow
            set position of frontmostWindow to {x, y - 100}
        end tell
    end tell'
    '''
    # Move right
    alt-backslash = '''exec-and-forget osascript -e '
    tell application "System Events"
        tell (first process whose frontmost is true)
            set frontmostWindow to window 1
            set {x, y} to position of frontmostWindow
            set position of frontmostWindow to {x + 100, y}
        end tell
    end tell'
    '''
    # Resize width -200
    alt-shift-semicolon = '''exec-and-forget osascript -e '
    tell application "System Events"
        tell (first process whose frontmost is true)
            set frontmostWindow to window 1
            set {x, y} to position of frontmostWindow
            set {w, h} to size of frontmostWindow
            set size of frontmostWindow to {w-200, h}
        end tell
    end tell'
    '''
    # Resize height +100
    alt-shift-quote = '''exec-and-forget osascript -e '
    tell application "System Events"
        tell (first process whose frontmost is true)
            set frontmostWindow to window 1
            set {x, y} to position of frontmostWindow
            set {w, h} to size of frontmostWindow
            set size of frontmostWindow to {w, h + 100}
        end tell
    end tell'
    '''
    # Resize height -100
    alt-shift-leftSquareBracket = '''exec-and-forget osascript -e '
    tell application "System Events"
        tell (first process whose frontmost is true)
            set frontmostWindow to window 1
            set {x, y} to position of frontmostWindow
            set {w, h} to size of frontmostWindow
            set size of frontmostWindow to {w, h - 100}
        end tell
    end tell'
    '''
    # Resize width +200
    alt-shift-backslash = '''exec-and-forget osascript -e '
    tell application "System Events"
        tell (first process whose frontmost is true)
            set frontmostWindow to window 1
            set {x, y} to position of frontmostWindow
            set {w, h} to size of frontmostWindow
            set size of frontmostWindow to {w+200, h}
        end tell
    end tell'
    '''
    enter = 'mode main'
    esc = 'mode main'

# 'service' binding mode declaration.
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
[mode.service.binding]
    esc = ['reload-config', 'mode main']
    r = ['flatten-workspace-tree', 'mode main'] # reset layout
    f = ['layout floating tiling', 'mode main'] # Toggle between floating and tiling layout
    backspace = ['close-all-windows-but-current', 'mode main']

    # sticky is not yet supported https://github.com/nikitabobko/AeroSpace/issues/2
    #s = ['layout sticky tiling', 'mode main']

    alt-shift-semicolon = ['join-with left', 'mode main']
    alt-shift-quote = ['join-with down', 'mode main']
    alt-shift-leftSquareBracket = ['join-with up', 'mode main']
    alt-shift-backslash = ['join-with right', 'mode main']

    down = 'volume down'
    up = 'volume up'
    shift-down = ['volume set 0', 'mode main']

[[on-window-detected]]
    if.app-id = 'com.agilebits.onepassword7'
    run = ['layout floating']

[[on-window-detected]]
    if.app-id = 'com.openai.chat'
    run = ['layout floating']

[[on-window-detected]]
    if.app-id = 'com.apple.Music'
    run = ['layout floating']

[[on-window-detected]]
    if.app-id = 'com.apple.finder'
    run = ['layout floating']

[[on-window-detected]]
    if.app-id = 'com.rightfontapp.RightFont5'
    run = ['layout floating']

[[on-window-detected]]
    if.app-id = 'net.whatsapp.WhatsApp'
    run = ['layout floating']